version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vehicle_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-service
    container_name: user-service
    environment:
      PORT: 4001
      USER_SERVICE_PORT: 4001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/vehicle_platform
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: vehicle_platform
      RABBIT_URL: amqp://guest:guest@rabbitmq:5672
      RABBIT_EXCHANGE: user.events
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "4001:4001"

  vehicle-service:
    build: ./vehicle-service
    container_name: vehicle-service
    environment:
      PORT: 4002
      VEHICLE_SERVICE_PORT: 4002
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: vehicle_platform
      RABBIT_URL: amqp://guest:guest@rabbitmq:5672
      RABBIT_EXCHANGE: user.events
      RABBIT_QUEUE: vehicle.user.created
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "4002:4002"

volumes:
  postgres_data:
